% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sector.R
\name{sector_update}
\alias{sector_update}
\title{Update sectoring scheme with crosswalk table}
\usage{
sector_update(
  scheme_old,
  crosswalk,
  description_new,
  id_old = "sector536",
  id_new = "sector546"
)
}
\arguments{
\item{scheme_old}{data frame that holds old sectoring scheme}

\item{crosswalk}{data frame for converting between new and old sectors}

\item{description_new}{data frame that contains descriptions for new sectors}

\item{id_old}{id_old variable name for the old sector id}

\item{id_new}{variable name for the new sector id}
}
\description{
Update sectoring scheme with crosswalk table
}
\examples{
# load sample data
data(sector_scheme536, sectors_crosswalk, sectors546)

# check the sector allocation for the 536 sector scheme (should be TRUE)
check_share_sums(sector_scheme536, share, category)

# update to 546 sector scheme and check
sector_scheme546 <- sector_update(sector_scheme536, sectors_crosswalk, sectors546)
check_share_sums(sector_scheme546, share, category)

# get total spending by categories
data(spending, categories)
spend_category <- spending \%>\%
    left_join(categories, by = c("type", "item")) \%>\%
    mutate(spend = spend * share)
check_spend_sums(spending, spend_category, spend, type, item)

# get total spending by sectors
spend_sector <- spend_category \%>\%
    select(-share) \%>\%
    left_join(sector_scheme546, by = "category") \%>\%
    mutate(spend = spend * share)
check_spend_sums(spend_category, spend_sector, spend, type, item, category)
}
\seealso{
Other functions to get spending by implan sector: 
\code{\link{check_share_sums}()},
\code{\link{check_spend_sums}()}
}
\concept{functions to get spending by implan sector}
